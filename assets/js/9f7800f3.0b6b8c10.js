"use strict";(self.webpackChunkcookbook=self.webpackChunkcookbook||[]).push([[5162],{9492:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=o(5893),i=o(1151);const r={sidebar_position:1,title:"Configuration examples"},s=void 0,a={id:"extensions/formula-fields/configuration-examples",title:"Configuration examples",description:"Examples of common formula fields.",source:"@site/docs/extensions/formula-fields/configuration-examples.md",sourceDirName:"extensions/formula-fields",slug:"/extensions/formula-fields/configuration-examples",permalink:"/cookbook/docs/extensions/formula-fields/configuration-examples",draft:!1,unlisted:!1,editUrl:"https://github.com/rossumai-community/cookbook/tree/master/docs/extensions/formula-fields/configuration-examples.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Configuration examples"},sidebar:"extensionsSidebar",previous:{title:"Formula fields",permalink:"/cookbook/docs/category/formula-fields"},next:{title:"Master data hub",permalink:"/cookbook/docs/category/master-data-hub"}},l={},d=[{value:"Copy fields conditionally",id:"copy-fields-conditionally",level:2},{value:"Generate NetSuite external IDs",id:"generate-netsuite-external-ids",level:2},{value:"Normalize field value",id:"normalize-field-value",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Examples of common formula fields."}),"\n",(0,t.jsx)(n.h2,{id:"copy-fields-conditionally",children:"Copy fields conditionally"}),"\n",(0,t.jsxs)(n.p,{children:["Copy ",(0,t.jsx)(n.code,{children:"order_id"})," into another field but prioritize ",(0,t.jsx)(n.code,{children:"order_id_manual"})," datapoint if it exists:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"field.order_id_manual if not is_empty(field.order_id_manual) else field.order_id\n"})}),"\n",(0,t.jsx)(n.h2,{id:"generate-netsuite-external-ids",children:"Generate NetSuite external IDs"}),"\n",(0,t.jsxs)(n.p,{children:["Create external ID needed by NetSuite for ",(0,t.jsx)(n.em,{children:"VendorBill"})," and ",(0,t.jsx)(n.em,{children:"VendorCredit"})," records:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"# Convert document type to lower case for standardization\ndocument_type = field.document_type.lower()\n\n# Create an external ID by combining document ID and entity (vendor) match\nexternal_id = f\"{field.document_id}_{field.ns_entity_match}\"\n\n# Map of document types to their corresponding prefixes\nprefix_map = {\n    'credit_note': '__rossum_vc_',\n    'tax_invoice': '__rossum_vb_'\n}\n\n# Retrieve the prefix for the document type, default to a general prefix if not found\nprefix = prefix_map.get(document_type, '__rossum_')\n\n# Construct the final result by concatenating prefix and external ID\nresult = f\"{prefix}{external_id}\"\n\nresult\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This is typically necessary when ",(0,t.jsx)(n.a,{href:"../netsuite/export-webhook#vendor-bills-invoices",children:"exporting records into NetSuite"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"normalize-field-value",children:"Normalize field value"}),"\n",(0,t.jsx)(n.p,{children:'Remove non-alphanumeric characters (except "-" and "_"):'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'substitute(r"[^a-zA-Z\\d\\-_]", "", field.order_id)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>a,a:()=>s});var t=o(7294);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);